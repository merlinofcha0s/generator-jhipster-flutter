<%_
const baseName = context.baseName;
const entityInstance = context.entityInstance;
const entityFileName = context.entityFileName;
const entityClassPlural = context.entityClassPlural;
const entityClassHumanized = context.entityClassHumanized;
const entityClassPluralHumanizedLowered = context.entityClassPluralHumanizedLowered;
_%>
part of '<%= entityFileName %>_bloc.dart';

enum <%= entityClassHumanized %>StatusUI {init, loading, done}

class <%= entityClassHumanized %>State extends Equatable {
  final List<<%= entityClassHumanized %>> <%= entityClassPluralHumanizedLowered %>;
  final <%= entityClassHumanized %>StatusUI <%= entityFileName %>StatusUI;
  
  const <%= entityClassHumanized %>State({
    this.<%= entityClassPluralHumanizedLowered %> = const [],
    this.<%= entityFileName %>StatusUI = <%= entityClassHumanized %>StatusUI.init
  });

  <%= entityClassHumanized %>State copyWith({
    List<Employee> <%= entityClassPluralHumanizedLowered %>,
    <%= entityClassHumanized %>StatusUI <%= entityFileName %>StatusUI
  }) {
    return <%= entityClassHumanized %>State(
        <%= entityClassPluralHumanizedLowered %>: <%= entityClassPluralHumanizedLowered %> ?? this.<%= entityClassPluralHumanizedLowered %>,
      <%= entityFileName %>StatusUI: <%= entityFileName %>StatusUI ?? this.<%= entityFileName %>StatusUI
    );
  }

  @override
  List<Object> get props => [<%= entityClassPluralHumanizedLowered %>, <%= entityFileName %>StatusUI];

  @override
  bool get stringify => true;
}
