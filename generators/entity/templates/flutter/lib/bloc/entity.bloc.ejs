<%_
const baseName = context.baseName;
const entityInstance = context.entityInstance;
const entityFileName = context.entityFileName;
const entityClassPlural = context.entityClassPlural;
const entityClass = context.entityClass;
const entityClassPluralLowered = context.entityClassPluralLowered;
const entityClassCamelCase = context.entityClassCamelCase;

_%>
import 'dart:async';
import 'package:bloc/bloc.dart';
import 'package:flutter/foundation.dart';
import 'package:equatable/equatable.dart';
import 'package:<%= baseName %>/entities/<%= entityFileName %>/<%= entityFileName %>_model.dart';
import 'package:<%= baseName %>/entities/<%= entityFileName %>/<%= entityFileName %>_repository.dart';

part '<%= entityFileName %>_events.dart';
part '<%= entityFileName %>_state.dart';

class <%= entityClass %>Bloc extends Bloc<<%= entityClass %>Event, <%= entityClass %>State> {
  final <%= entityClass %>Repository _<%= entityClassCamelCase %>Repository;

  <%= entityClass %>Bloc({@required <%= entityClass %>Repository <%= entityClassCamelCase %>Repository}) : assert(<%= entityClassCamelCase %>Repository != null),
        _<%= entityClassCamelCase %>Repository = <%= entityClassCamelCase %>Repository, super(const <%= entityClass %>State());

  @override
  void onTransition(Transition<<%= entityClass %>Event, <%= entityClass %>State> transition) {
    super.onTransition(transition);
  }

  @override
  Stream<<%= entityClass %>State> mapEventToState(<%= entityClass %>Event event) async* {
    if (event is Init<%= entityClass %>List) {
      yield* onInitList(event);
    }
  }

  Stream<<%= entityClass %>State> onInitList(Init<%= entityClass %>List event) async* {
    yield state.copyWith(<%= entityClassCamelCase %>StatusUI: <%= entityClass %>StatusUI.loading);
    List<<%= entityClass %>> <%= entityClassPluralLowered %> = await _<%= entityClassCamelCase %>Repository.getAll<%= entityClassPlural %>();
    yield state.copyWith(<%= entityClassPluralLowered %>: <%= entityClassPluralLowered %>, <%= entityClassCamelCase %>StatusUI: <%= entityClass %>StatusUI.done);
  }
}